package m3.gateway;

import "common.proto";
import "room.proto";


enum MessageType 
{
  NONE                = 1;
  VERSION             = 2;		// 버전확인
  LOGIN               = 3;		// 로그인 요청
  LOGOUT              = 4;		// 로그아웃 요청
  PLUG                = 5;		// 
  INFO                = 6;		// 게임정보 요청
  AUTOJOIN            = 7;		
  LEAVE               = 8;
  PING                = 9;
  PONG                = 10;

  ROOM                = 11; 	// 룸 서버로 보내고 받는 내용

	PROPERTIES					= 12;		// 게임설정

  START_GAME          = 13;		// 게임 시작
  FINISH_GAME         = 14;		// 게임 종료
  SECOND_TREASURE     = 15; 	// 두번째 보상 요구
  FINISH_MULTI_GAME   = 16; 	// 멀티 게임의 종료 정보
  WAVE                = 17;   // 웨이브 진행 정보

  MAKE_PUBLIC_ROOM    = 18; 	// 공개방 생성
  MAKE_PRIVATE_ROOM   = 19; 	// 비공개방 생성


  DROP_OUT            = 20; 	// 탈퇴 요청
  CONFIRM_TO_DROP_OUT = 21; 	// 탈퇴 확정

  LEVEL_UP            = 22;   // 인게임에서 레벨업 요청

	BATTLE_SKIP					= 30;		// 빠른전투

	START_SURVIVAL_GAME = 31;		// 서바이벌 게임 시작
	FINISH_SURVIVAL_GAME= 32;		// 서바이벌 게임 종료

  NICKNAME            = 40;

  MAKE_HERO           = 100;	// 히어로 생성요청
  SELECT_HERO         = 101;	// 히어로 선택요청
  HEROES              = 102;	// 히어로 목록요청

  DUNGEONS            = 110;	// 던전 목록요청
  EPIC_DUNGEONS       = 111;	// 스토리 던전 목록요청
  STAGES              = 112;	// 던전에 해당하는 스테이지 목록요청
  UNLOCK_STAGE        = 114; 	// 스테이지 언락 처리
  RESET_STAGE         = 115; 	// 스테이지 쿨타임 리셋 처리
	QUERY_STAGE					= 116;	// 스테이지 상세정보 요청

  GIFTS               = 120;  // 선물 리스트
  TAKE_GIFT           = 121;  // 선물 얻기
	TUTORIAL            = 122;  // 튜토리얼 선물 보상

	ESHOP								= 130;	// 외부연동캐쉬 정보
	BUY_IN_ESHOP				= 131;	// 외부연동캐쉬 구매
	CASH_SHOP						= 132;	// 충전소 구매정보
	BUY_IN_CASH_SHOP		= 133;	// 충전소 구매
  ONI_SHOP            = 134;  // 도깨비 상점
  BUY_IN_ONI_SHOP     = 135;  // 도깨비 상점에서 구매

  COSTUMES            = 140;	// 코스츔 정보
  SELECT_COSTUME      = 141;	// 코스츔 선택
  COSTUMES_TO_MAKE    = 142;	// 제조가능 코스튬 목록
  BUY_COSTUME         = 143;	// 코스츔 구매
  MAKE_COSTUME        = 144;	// 코스츔 제조
  COSTUMES_TO_REINFORCE  = 145;	// 강화가능 코스튬 목록
  REINFORCE_COSTUME   = 146;	// 코스츔 강화
 

  INVENTORY           = 150; // 인벤토리 정보
  DROP_ITEM           = 151; // 아이템 분해
  PUT_ON              = 152; // 아이템 장착
  TAKE_OFF            = 153; // 아이템 벗기
  FIX_ITEM            = 154; // 아이템 수리
  REINFORCE_ITEM      = 155; // 아이템 강화
  EXPAND_INVENTORY    = 156; // 인벤토리 확장
  MAKE_ITEM           = 159; // 아이템 제작

  HEART               = 160;

  LOTTERYS            = 165; // 가챠가격정보
	TAKE_LOTTERY				= 166; // 가챠뽑기

  RESURRECTION        = 170;

  SKILLS              = 180;	// 스킬정보
  EXPAND_SKILL_BUTTON = 181;	// 스킬버튼 확장
  SKILL_BUTTON        = 182;	// 스킬버튼 지정
  REINFORCE_SKILL     = 183;	// 스킬강화
  SKILL_AUTO_ASSIGN   = 184;	// 스킬버튼 자동지정
  RESET_SKILL         = 185;  // 스킬 리셋

  BUDDIES             = 190; 	// 친구 리스트
  EXFRIEND            = 191; 	// 친구 삭제
  SEND_HEART          = 192; 	// 하트 보내기
  RECEIVE_HEART       = 193; 	// 하트 받기
  ASK_FRIENDSHIPS     = 194; 	// 친구 수락 요청 리스트
  PROPOSE_BUDDY       = 195; 	// 친구 요청
  ACCEPT_FRIENDSHIP   = 196; 	// 친구 수락
  REJECT_FRIENDSHIP   = 197; 	// 친구 수락 거부
  FIND_BUDDY          = 198; 	// 친구 검색
  SEARCHABLE          = 200; 	// 닉네임 검색 가능 여부
	RECOMMEND_FRIENDSHIPS = 201;// 친구 추천 요청 리스트
	FRIEND_PROFILE			= 202;	// 친구 프로필 요청

  FACEBOOK_INVITATION      = 203;  // 페이스북 초대
  INVITED_FACEBOOK_FRIENDS  = 204;  // 페이스북에 초대한 친구들

  FACEBOOK_FRIENDS       = 205;  // 페이스북톡 친구들
  LINK_FACEBOOK_FRIENDS  = 206;  // 페이스북톡 친구 등록
  UNLINK_FACEBOOK_FRIENDS= 207;  // 페이스북톡 친구 등록해제

  RECEIVE_HEART_ALL   = 208;  // 하트 전체 다 받기

  BUDDIES_TO_INVITE_GAME      = 210; // 게임에 초대할 친구 리스트
  INVITE_BUDDY_TO_PLAY_GAME   = 211; // 게임에 친구 초대
  BE_INVITED_TO_PLAY_GAME     = 212; // 게임에 초대되었음
  ACCEPT_GAME_INVITATION      = 213; // 게임 초대에 응함
  DECLINE_GAME_INVITATION     = 214; // 게임 초대 불응
  CANCEL_GAME_INVITATION      = 215; // 방장이 게임 초대 취소
  CHANGE_PUBLIC_ROOM          = 217; // 공개방으로 전환

  RANKING             = 220; 	// 랭킹 리스트
  RANKER              = 225;  // 랭커 상세정보

	DAILYSTAMP					= 230;	// 일일보상 정보


  ASK_EXCHANGE_HEART  = 235;  // 게임진행시 캐쉬를 하트로 바꿀지 여부 물어봄
  EXCHANGE_HEART      = 236;  // 하트 교환해 달라는 요청

  ACHIVEMENT                  = 240; 		// 업적 리스트
  ACHIVEMENT_REWARD           = 241; 		// 업적 보상

  MATERIAL_COOLTIME           = 245; // 채료 수집 쿨타임 조회
  COLLECT_MATERIAL            = 246; // 재료 수집 요구
  RESET_MATERIAL_COOLTIME     = 247; // 재료 수집 쿨타임 초기화

	QUERY_PROMOTION						 = 250;	// 추천인 입력가능한지 여부
  PROMOTER                   = 251; // 추천자 지정
	PROMOTION_COUNT						 = 252;	// 추천받은 횟수

  COUPON                     = 260; // 쿠폰 처리
	KEYWORD_COUPON						 = 261;	// 키워드 쿠폰처리
  COUPON_HISTORY             = 262; // 쿠폰 사용 내역

  FACEBOOK_OPTIONS              = 270; // 페이스북 옵션
	QUERY_FACEBOOK_OPTIONS				 = 271;	// 페이스북 온셥확인

	REVIEW										 = 280; // 댓글리뷰 보상

	VIP												 = 285;	// VIP

	NOTIFY_MESSAGE						 = 291;	// 알림메시지
	BADGES										 = 292;	// 뱃지정보


  REFILL_SURVIVAL_CHALLENGE  = 394; // 서바이벌 모드 회수 리필
  SURVIVAL_BUFF              = 395; // 서바이벌 모드 버프 리스트

	REVIVAL										 = 396;	// 회복

  // for test
  TEST_PARAM          			 = 301;
}


enum ErrorCode 
{
  EC_CLIENT = 1;
  EC_INTERNAL = 2;
  EC_DATABASE = 3;
  EC_ALREADY_LOGIN = 4;
  EC_VERSION = 5;
  EC_PROTOCOL = 6;
  EC_UNABLE_TO_OPERATE = 7;
  EC_DUPLICATED_NICKNAME = 8;
  EC_VIOLATED_NICKNAME = 9;
  EC_NO_ROOM = 10; 	// 대기하고 있는 스테이지 서버가 없음
  EC_NO_STAGE = 11; // 스테이지 종류가 없음
  EC_REQUIRED_LEVEL = 12; // 레벨 조건이 안맞음
  EC_NO_HEART = 13; // 하트가 존재하지 않음
  EC_NO_HERO = 14; // 선택된 캐릭터가 없는 경우
  EC_PRESENCE = 15; // 프레젠스 서버 오류
  EC_NOT_ENOUGH_HONBUL = 16;
  EC_NOT_ENOUGH_CASH = 17;
  EC_NOT_ENOUGH_LEVEL = 18;
  EC_ALREADY_EQUIPED = 19; // 이미 착용되어 착용 불가
  EC_NO_EQUIP = 20; // 장비가 존재하지 않음
  EC_JOB_MISMATCH = 21; // 직업이 일치하지 않음
  EC_INVENTORY_EXCESSED = 22; // 인벤토리가 넘쳤음
  EC_NO_ROOM_IN_INVENTORY = 23; // 인벤토리가 꽉참
  EC_NOT_ENOUGH_STONE = 24; // 강화석이 모자람
  EC_UNABLE_TO_OPERATE_IN_ROOM = 25; // 대기방에 있어서 처리 못함
  EC_NOT_ENOUGH_TALISMAN = 26; // 부적이 모자람
  EC_NO_SELECTED_COSTUME = 27; // 선택된 코스튬이 없음
  EC_NO_COSTUME = 28; // 코스튬이 존재 안함
  EC_NOT_ENOUGH_SKILL_POINT = 29; // 스킬 포인트 부족
  EC_NO_SKILL = 30;
  EC_NO_ITEM = 31;
  EC_NO_FRIEND = 32;
  EC_NO_INVITATION = 33;
  EC_NOT_ENOUGH_HEART = 34;
  EC_NO_GAME = 35;
	EC_NO_NICKNAME = 36;										// 닉네임이 없는 경우
  EC_OVER_TRY_COUNT = 37;
  EC_NOT_IMPLEMENTED_YET = 255;

	EC_PMANGPLUS_NO_SUCCESS = 500;					// 피망플러스 비정상 응답
	EC_PMANGPLUS_INVALID_RESULT_CODE = 501;	// 피망플러스 정상응답코드가 아님
	EC_PMANGPLUS_EXCEPTION = 502;						// 피망플러스 예외발생
	EC_PMANGPLUS_FAILURE_TRANSACTION = 503;	// 피망플러스 인증실패
}


message Request
{
  message Version
  {
    optional int32 protocol = 1 [default = 150401];
    required string service = 2;
    required common.PlatformType platform = 3;
		optional string validation = 4;
  }

  message Login
  {
    required int64 game_id = 1;						// 멤버쉽 아이디
    required string udid = 2;
    required common.PlatformType platform = 3;
		optional int64 facebook_id = 4;				// 페이스북 아이디
    optional string access_token = 5; 		// 멤버쉽 억세스 토큰
  }

  message Plug
  {
    required int64 game_id = 1;
    required string passwd = 3;
  }

  message MakeHero
  {
    required int32 job = 1;
  }

  message SelectHero
  {
    required int32 job = 1;
  }

  message Stages
  {
    required int32 dungeon_id = 1;
  }

  message SelectStage
  {
    required int32 stage_id = 1;
  }

	message Eshop
	{
		required common.MarketType market = 1;
	}

	message BuyInEshop
	{
		message Purchase
		{
			required common.PlatformType platform = 1;
			required common.CurrencyType currency = 2;
			required string developer_payload = 3;
			required string purchase_token = 4;
			required string price = 5;
    	required string transaction_id = 6;
		}

		required common.EshopEventType event_type = 1;	// 이벤트종류
		required common.MarketType market = 2;					// 마켓종류
		required int64 cash = 3;												// 상점 캐쉬
		required string product_id = 4;									// 제품아이디
    optional Purchase purchase = 5;									// 구매정보
	}

	message CashShop
	{
		required common.MarketType market = 1;
	}

	message BuyInCashShop
	{
		required int32 category = 1;			// 판매카테고리
		required int64 cash = 2;					// 캐쉬금액(PK)
		required int64 amount = 3;				// 카테고리 기준 지급량
		required int32 discount_vip = 4;	// VIP할인율
	}
 
  message OniShop
  {
    required common.OniShopMethod method = 1;
    required common.OniShopCategory category = 2;
  }

  message BuyInOniShop
  {
    required int32 goods_id = 1;			// 물품 고유번호
		required int64 price = 2;					// 물품 가격
		required int32 discount_vip = 3;	// VIP할인율
  }


  message SelectCostume
  {
    required int32 costume_id = 1; // 선택할 코스튬
  }

  message Expand
  {
    enum Type
    {
      BY_CASH = 1;
      BY_HONBUL = 2;
    }

    required Type type = 1;
  }

  message Inventory
  {
    optional int32 type = 1; // 아이템 분류
    optional int32 item = 2; // 이이템 종류
  }
  
  message SelectItem
  {
    optional int64 item_id = 1;
    optional int32 type = 2;
  }

  message FixItem
  {
    enum Menu
    {
      MENU_REINFORCE = 1;
      MENU_INVENTORY = 2;
    }

    optional int64 item_id = 1;
    optional Menu menu = 2 [default=MENU_REINFORCE];
  }



  message DropItem
  {
    required int64 item_id = 1; // 슬롯 번호
    required int32 count = 2;  // 개수
  }

  message ReinforceItem
  {
    required common.ItemType type = 1; 		// 강화할 장비
    optional bool use_cash = 2; 					// 안전 강화 여부
    optional int64 overcome_item_id = 3; 	// 한계돌파용 추가 아이템
  }

  message TakeLottery
  {
		message Event
		{
			required common.LotteryEventCategory category = 1;
			required int32 e_id = 2;
		}

    required common.LotteryType type = 1;   // 가차 타입
    required common.LotteryCount count = 2; // 가차 회수
		optional Event event = 3;
  }

  message SkillButton
  {
    required int32 button_a = 1;  // 0이면 해제
    required int32 button_b = 2;  // 0이면 해제
    required int32 button_c = 3;  // 0이면 해제
  }


  message ReinforceSkill
  {
    required int32 skill_id = 1;
  }


  message FindBuddy
  {
    required string name = 1;
  }

  message Buddy
  {
    required int64 user_id = 1;
  }

	message AcceptFriendships
	{
		repeated Buddy buddies = 1;
	}

  message Invite
  {
    required int64 user_id = 1;
    required int32 slot = 2;
  }

  message BeInvited
  {
    required int32 invite_id = 1; 	// 초청 번호
    required string name = 2; 			// 초청한 사람 이름
    required int32 job = 3; 				// 초청한 사람 직업
    required int32 level = 4; 			// 초청한 사람 레벨
    //required int32 stage_id = 5; 		// 초청한 스테이지 번호
		//required int32 difficulty = 6;	// 초청한 스테이지 난이도
  }

	message SecureData
	{
		required int32 length = 1;
		repeated uint32 data = 2 [packed=true];
		repeated uint32 sign = 3 [packed=true];
	}

  message StartGame
  {
    required int32 stage_id = 1;    // 입장할 스테이지 
    required int32 difficulty = 2;  // 진행할 게임 난이도
  }

  message FinishGame
  {
    required int32 stage_id = 1;
    required int32 difficulty = 2;
    optional SecureData secure_data = 3;
		optional common.FinishGame plain_data = 4;
  }

	message StartSurvivalGame
	{
		message Buff
		{
			required int32 buff_id = 1;		// 버프아이디
			required int64 price = 2;			// 가격
		}

		required int32 dungeon_id = 1;	// 서바이벌 던전 아이디
		repeated Buff buffs = 2;				// 구입할 버프
	}

	message FinishSurvivalGame
	{
		required int32 dungeon_id = 1;	// 서바이벌 던전 아이디
		optional SecureData secure_data = 2;
		optional common.FinishSurvivalGame plain_data = 3;
	}

	message BattleSkip
	{
		required int32 stage_id = 1;			// 스테이지
		required int32 difficulty = 2;		// 게임 난이도
		required int32 probability = 3;		// 승리확률
	}
	
  message Ranking
  {
    required common.RankingType type = 1;   // 랭킹의 종류
    optional int32 first_ranker = 2; // 첫번째 랭커
    optional int32 count = 3 [default = 15]; // 받아올 랭킹의 개수
  }

	message Ranker
	{
		required common.RankingType type = 1;	// 랭킹의 종류
		required int64 user_id = 2;						// 유저아이디
	}

  message TakeGift
  {
    required int64 gift_id = 1; 	// 선물함 디비에 들어가 있는 유니크아이디
  }

	message Tutorial
	{
		required common.TutorialStep step = 1;
	}

	message DailyStamp
	{
		required int32 year_month = 1;	// 년월(YYYYMM)
	}

	message LevelUp
	{
		optional SecureData secure_data = 1;
		optional common.LevelUp plain_data= 2;		// 테스트용
	}

  message Wave
  {
		optional SecureData secure_data = 1;
		optional common.Wave plain_data = 2;				// 테스트용
  }

  message AchivementReward 
  {
    required bool today = 1; 									// 오늘의 목표를 받아갈지 여부
    required common.AchivementType type = 2;	// 다른 업적중 받아갈 업적
  }

  message FacebookInvitation
  {
    required int64 facebook_id = 1;
  }

	message FacebookBuddy
	{
		required int64 id = 1;
	}

  message SelectFacebookFriends
  {
    repeated FacebookBuddy buddies = 1;
  }

  message SelectMaterial
  {
    required int32 material_id = 1;
  }

	message QueryPromotion
	{
    required common.PlatformType platform = 1;
	}

  message Promoter
  {
    required string name = 1;
  }

  message ReceiveHeartAll
  {
    required bool from_facebook_friend = 1;
  }

  message Coupon
  {
    required string code = 1;
  }

	message KeywordCoupon
	{
		required string keyword = 1;
	}

  message FacebookOptions
  {
    required bool no_message = 1;
    required bool no_profile = 2;
  }


  message TestParam
  {
    enum ParamType
    {
      SET_CASH = 1;
      SET_HONBUL = 2;
      SET_SKILL_POINT = 3;
      SET_LEVEL = 4;
      SET_TALISMAN = 5;
			SET_STONE = 6;
			SET_COIN = 7;
			SET_HEART = 8;
			ADD_ITEM = 9;
			GET_USER_ID = 10;
			SET_EXP = 11;
			SET_PLAYING_TIME = 12;
			SET_UNLOCK_STAGE_COUNT = 13;
    }

    message Param
    {
      required ParamType type = 1;
      optional int64 int_data = 2;
      optional string str_data = 3;
    }

    repeated Param params = 1;
  }


  required MessageType type = 1;
  required int32 sequence = 2;
	required int32 checksum = 3;

  optional Version version = 10;
  optional Login login = 11;
  optional Plug plug = 12;
  optional string leave = 15;
  optional string nickname = 16;

  optional MakeHero make_hero = 100;
  optional SelectHero select_hero = 101;

  optional Stages stages = 120;
  optional SelectStage unlock_stage = 121;
  optional SelectStage reset_stage = 122;
	optional SelectStage query_stage = 123;

  optional TakeGift take_gift = 110;
	optional Tutorial tutorial = 111;

	optional Eshop eshop = 130;
	optional BuyInEshop buy_in_eshop = 131;
	optional CashShop cash_shop = 132;
	optional BuyInCashShop buy_in_cash_shop = 133;
  optional OniShop oni_shop = 134;
  optional BuyInOniShop buy_in_oni_shop = 135;

  optional SelectCostume select_costume = 140;
  optional SelectCostume buy_costume = 141; 
  optional SelectCostume make_costume = 142; 
  optional SelectCostume reinforce_costume = 143; 

  optional Inventory inventory = 150;
  optional DropItem drop_item = 151; 
  optional SelectItem put_on = 152;
  optional SelectItem take_off = 153;
  optional FixItem fix_item = 154;
  optional ReinforceItem reinforce_item = 155;
  optional int32 expand_inventory = 156;
  optional SelectItem make_item = 159;
 
  optional SkillButton skill_button = 160;
  optional ReinforceSkill reinforce_skill = 161;
  optional Expand expand_skill_button = 162;

  optional TakeLottery take_lottery = 166;

  optional FindBuddy find_buddy = 170;
  optional Buddy send_heart = 171;
  optional Buddy receive_heart = 172;
  optional AcceptFriendships accept_friendship = 173;
  optional Buddy reject_friendship = 174;
  optional Buddy exfriend = 175;
  optional Buddy propose_buddy = 176;
	optional Buddy friend_profile = 177;

  optional Invite invite_buddy_to_play_game = 180;
  optional BeInvited be_invited_to_play_game = 181;
  optional int32 accept_game_invitation = 182; 	// 초청 번호
  optional int32 decline_game_invitation = 183; // 초청 번호
  optional int32 cancel_game_invitation = 184; 	// 취소 슬롯 번호

  optional StartGame start_game = 190;
  optional FinishGame finish_game = 191;

	optional StartSurvivalGame start_survival_game = 192;
	optional FinishSurvivalGame finish_survival_game = 193;

  optional BattleSkip battle_skip = 199;

  optional Ranking ranking = 200;
	//optional Ranking survival_ranking = 201;
  optional Ranker ranker = 202;

  optional string confirm_to_drop_out = 210;
  optional LevelUp level_up = 211;

  optional Wave wave = 220;

	optional DailyStamp dailystamp = 230;

  optional AchivementReward achivement_reward = 231;

  optional FacebookInvitation facebook_invitation = 232;

  optional SelectMaterial collect_material = 233;

	optional QueryPromotion query_promotion = 240;
  optional Promoter promoter = 241;

  optional SelectFacebookFriends link_facebook_friends = 242;
  optional SelectFacebookFriends unlink_facebook_friends = 243;

  optional ReceiveHeartAll receive_heart_all = 244;

  optional Coupon coupon = 245;
	optional KeywordCoupon keyword_coupon = 246;

  optional FacebookOptions facebook_options = 247;

  optional room.Request room = 300;

	// for test  
	optional TestParam test_param = 501;
}



message Response
{
  message Error
  {
    required ErrorCode code = 1;
    optional string reason = 2;
  }

  message Login
  {
    required string plug_ip = 1; 		// 재접속용 IP
    required int32 plug_port = 2; 	// 재접속용 Port
    required string passwd = 3;  		// 재접속 패스워드
		repeated int32 encrypt_key = 4;	// 64byte random string
  }


  message Plug 
  {
    required int64 game_id = 1;
  }


  message Costume
  {
    required int32 costume_id = 1; // 코스튬 구분 번호
    required int64 cost = 2; // 가격
    required bool lock = 3; // 잠겨있는지 여부
  }


  message Stage 
  {
    required int32 stage_id = 1; // 스테이지 구분번호
    required int32 rank = 2; // 클라어했을때는 랭크(-1은 클리어 못함)
    optional bool no_damage = 3; // 데미지 없이 클리어
    optional bool no_resurrection = 4; // 부활 없이 클리어
  }


  message Hero
  {
    required int32 job = 1;
    required int32 level = 2;
  }


  message Costumes
  {
    message Costume
    {
      required int32 costume_id = 1; // 코스튬 아이디
      required bool selected = 2; // 코스튬이 착용중인지 여부
      required bool reinforce = 3; // 강화가 가능한지 여부
      optional int32 level = 4; // 코스튬의 레벨
    }

    required int32 job = 1;
    required int32 selected_costume_id = 2;
    repeated Costume costumes = 3;
  }


  message CostumesToMake
  {
    message Costume
    {
      required bool part1 = 1; // 조각이 있는지 여부
      required bool part2 = 2;
      required bool part3 = 3;
      required bool part4 = 4;
      required bool part5 = 5;
      required bool part6 = 6;

      optional int32 stage1 = 7; // 조각을 모을 수 있는 스테이지
      optional int32 stage2 = 8;
      optional int32 stage3 = 9;
      optional int32 stage4 = 10;
      optional int32 stage5 = 11;
      optional int32 stage6 = 12;

      optional int64 cash = 13; // 여기에 0이상의 값이 들어오면 즉시구매만 되는 코스튬
      optional int64 honbul = 14; // 조각이 다 모여있으면 필요한 혼불 제시

			required int32 costume_id = 15;	// 코스튬 아이디
    }

    required int32 job = 1;
    repeated Costume costumes = 2;
  }


  message CostumesToReinforce
  {
    message Costume
    {
      required bool part1 = 1; // 조각이 있는지 여부
      required bool part2 = 2;
      required bool part3 = 3;
      required bool part4 = 4;
      required bool part5 = 5;
      required bool part6 = 6;

      optional int32 stage1 = 7; // 조각을 모을 수 있는 스테이지
      optional int32 stage2 = 8;
      optional int32 stage3 = 9;
      optional int32 stage4 = 10;
      optional int32 stage5 = 11;
      optional int32 stage6 = 12;

      optional int64 cash = 13; 			// 여기에 0이상의 값이 들어오면 즉시구매만 되는 코스튬
      optional int64 honbul = 14; 		// 조각이 다 모여있으면 필요한 혼불 제시

      required int32 level = 15;			// 코스튬 레벨
			required int32 costume_id = 16;	// 코스튬 아이디
    }

    required int32 job = 1;
    repeated Costume costumes = 2;
  }

  message BuyCostume
  {
    required CostumesToMake costumes = 1;
    required int64 cash = 2; // 남아있는 캐쉬
  }

  message MakeCostume
  {
    required CostumesToMake costumes = 1;
    required int64 honbul = 2; // 남아있는 혼불
  }

  message ReinforceCostume
  {
    required CostumesToReinforce costumes = 1;
    required int64 cash = 2; // 남아있는 캐쉬
    required int64 honbul = 3; // 남아있는 혼불
  }

  message UnlockStage
  {
    required int64 cash = 1;
    required common.Stages stages = 2;
  }

  message ResetStage
  {
    required int64 cash = 1;
    required common.Stages stages = 2;
  }

	message QueryStage
	{
		required bool unlock = 1;				// 언락여부
		required bool cooltime = 2;			// 쿨타임여부
		required bool level = 3;				// 레벨제한 여부(최소/최대 확인)
	}

  message Heart
  {
    required int32 heart_count = 1; // 현재 하트
    required int32 max_heart = 2; // 최대 하트
    optional int32 next_time = 3; // 다음 하트 갱신 시간 (초단위)
  }


  message DropItem
  {
    required int32 total = 1; // 원래 개수
    required int32 drop = 2; // 버려진 개수
    required int32 remain = 3; // 버리고 남아있는 아이템 개수(0:일 경우 삭제된 상태)

    required int64 gain_honbul = 4; // 아이템을 버리고 돌아오는 혼불
    required int64 gain_stone = 5; // 아이템을 버리고 얻는 강화석

    required int64 honbul = 6; // 현재 소지한 혼불
    required int64 stone = 7; // 현재 소지한 강화석
  }

  message ExpandInventory
  {
    required int64 spend_cash = 1; // 소모한 캐쉬
    required int32 inventory_size = 2; // 변경된 인벤토리 크기
    required int64 cash = 3; // 현재 소지한 캐쉬
  }


  message ReinforceItem
  {
    required bool success = 1; // 강화 성공 여부
    optional bool broken = 2; // 파괴되었는지 여부
 
    required int64 item_id = 3; // 장비 구분자
    optional int64 deleted_overcome_item_id = 4; // 삭제된 한계돌파 아이템

    required int64 stone = 5; // 현재 소유한 강화석 개수
    required int64 honbul = 6; // 현재 소유한 혼불
    required int64 cash = 7; // 현재 소유한 혼불
  }

  message FixItem
  {
    required int64 item_id = 1; // 고친 아이템 
    required int64 cost = 2; // 고치는데 들어간 캐쉬
    required int64 cash = 3; // 현재 소유한 캐쉬
  }

	message Lotterys
	{
		optional common.Lotterys lotterys = 1;
		repeated common.LotteryEvent events = 2;
	}

  message TakeLottery
  {
    required int64 cash = 1;
    required int64 talisman = 2;

    message Gift
    {
      required int64 item_id = 1; 						// 인벤토리의 아이템 구분자
      required int32 item_no = 2; 						// 아이템의 종류
      required common.LotteryGrade grade = 3; // 획득 난이도
    }

    repeated Gift gifts = 3;
  }

  message MakeItem
  {
    required int32 blueprint_no = 1; // 사용한 도면 종류
    required int64 item_id = 2; // 인벤토리에서의 구분자
    required int32 item_no = 3; // 생성된 아이템 종류
  }

  message Skills 
  {
    message Skill
    {
      required int32 skill_id = 1;
      required int32 level = 2; // level이 0일 경우 획득 못함
      required bool lock = 3; // 강화나 획득이 불가능함
      optional bool max_level = 4; // 강화 만랩 찍음
    }

    required int32 job = 1;
    repeated Skill skills = 2;
  }

  message ExpandSkillButton
  {
    required common.Hero hero = 1;
    required int64 cash = 2;
    required int64 honbul = 3;
  }

  message ReinforceSkill
  {
    required Skills skills = 1;
    required int64 honbul = 2;
    required common.Hero hero = 3;
  }


  message ResetSkill
  {
    required Skills skills = 1;
    required int32 skill_point = 2;
    required int64 honbul = 3;
		optional int32 button_a = 4;
		optional int32 button_b = 5;
		optional int32 button_c = 6;
  }

	message Buddy
	{
		required int64 user_id = 1;					// 사용자아이디
		required int32 job = 2;							// 현재 캐릭터 직업
		required int32 level = 3;						// 현재 캐릭터 레벨
		required string name = 4;						// 닉네임
		optional int32 last_login = 5;			// 마지막 로그인시간 (Unixtimestamp)
		optional bool is_online = 6;				// 온라인 여부
		optional bool is_playing = 7;				// 플레이 여부
		optional bool is_buddy = 8;					// 친구 여부
		optional bool is_asking = 9;				// 친구요청 여부
		optional bool heart_to_receive = 10;	// 하트를 받을수 있는지 여부
		optional bool can_send_heart = 11;		// 하트를 보낼수 있는지 여부
		optional bool able_to_invite = 12;		// 초대가능 여부
    optional int64 facebook_id = 13;       // 페이스북톡 아이디
    optional int32 limit_time = 14;     // 하트 송수신시 제한시간(초)
    optional int32 max_level = 15;      // 가지고 있는 캐릭터중 가장 높은 레벨
    optional int32 hero_count = 16;     // 캐릭터 소지 여부
    optional int32 reg_timestamp = 17;  // 유저 등록일 (Unixtimestamp)
    optional bool no_facebook_message = 18; // 페이스북 메시지 수신 불가
    optional bool no_facebook_profile = 19; // 페이스북 프로파일 불가
    optional int64 story_score = 20;      // 친구의 최고 스코어
	}

  message FindBuddy
  {
    required string request_name = 1;
    repeated Buddy buddies = 2;
  }


  message Buddies
  {
    repeated Buddy buddies = 1;
    required int32 heart = 2;
		required int64 story_score = 3;
  }


  message AskFriendships
  {
    repeated Buddy requests = 1;
  }


  message BuddiesToInvite
  {
    repeated Buddy buddies = 1;
  }

  message BeInvitedToPlayGame
  {
    required int32 invite_id = 1;
    required string name = 2;
    required int32 job = 3;
    required int32 level = 4;
    // required int32 stage_id = 5;
		// required int32 difficulty = 6;
  }

	message RecommendFriendships
	{
		repeated Buddy by_party = 1;
		repeated Buddy by_level = 2;
	}

  message Ranking
  {
    message Ranker
    {
      required int32 rank = 1;				// 등수
      required int64 user_id = 2;			// 유저아이디
			required common.RankingDetail detail_info = 3;
    }

		required common.RankingType type = 1;	// 랭킹타입(스토리, 서바이벌, PVP)
    optional Ranker me = 2;
    repeated Ranker rankers = 3;
		optional int64 reset_cooltime = 4;	// 랭킹초기화까지 시간(sec)
  }

	message Material
	{
		required int32 item_id = 1;
		required int32 count = 2;
	}

  message Treasure
  {
    required common.TreasureType type = 1;
    optional int64 count = 2;
    optional int32 item_id = 3;
    optional bool selected = 4; 						// 선택된 항목
  }

  message SecondTreasure
  {
    repeated Treasure treasures = 1;
  }

  message StartGame
  {
    required int32 stage_id = 1;
    required int32 difficulty = 2;
    required common.Player player = 3; // 플레이어 구성 정보
    required common.StageInfo stage = 4; // 스테이지 구성 정보
		repeated int32 game_key = 5;		// 게임 보안키
  }

  message FinishGame
  {
		required int64 gain_exp = 1;			// 획득한 경험치
		required int64 gain_honbul = 2;		// 획득한 혼불
    repeated Material materials = 3;	// 재료보상 
    repeated Treasure treasures = 4;	// 보물상자
    required bool next_choice = 5;  	// 다음 선택 가능
  }

  message FinishMultiGame
  {
    required room.Response.Finish finish = 1;
    optional FinishGame reward = 2;
  }

	message StartSurvivalGame
	{
		required int32 dungeon_id = 1;
		required common.Player player = 2;
		required common.StageInfo stage = 3;
		repeated int32 game_key = 4;
		required int32 start_wave = 5;
	}

	message FinishSurvivalGame
	{
		message LevelUp
		{
			required common.Player player = 1;
			required int32 skill_point = 2;
		}
	
		required int64 gain_exp = 1;
		required int64 gain_honbul = 2;
		required int32 last_wave = 3;
		required int64 total_play_time = 4;
		optional LevelUp level_up = 6;
		repeated Material materials = 7;
		repeated Treasure treasures = 8;
	}

	message BattleSkip
	{
		message Cleared
		{
			message LevelUp
			{
				required common.Player player = 1;
				required int32 skill_point = 2;
			}

			required int32 gain_exp = 1;			// 획득 경험치
			repeated Material materials = 2;	// 재료보상 
			repeated Treasure treasures = 3;	// 보물상자
			required bool next_choice = 4;  	// 다음 선택 가능
			optional LevelUp level_up = 5;		// 레벨업정보
		}

		required int64 honbul = 1;
		optional Cleared clear = 22;
	}


	message BuyInEshop
	{
		required int64 cash = 1;			// 구매 후 가지게 되는 자산
		required bool next_event = 2;	// 다음번에도 할인이 적용되는지 여부
	}

	message CashShop
	{
		required common.Eshop eshop = 1;		// 외부상점
		required common.CashShop shop = 2;	// 충전소
		optional int32 discount_vip = 3;		// VIP 할인율
	}

	message BuyInCashShop
	{
		// 구매 후 가지게 되는 자산
		required int64 cash = 1;
		required int32 talisman = 2;
		required int32 stone = 3;
		required int32 coin = 4;
		required int32 heart = 5;
		required int64 honbul = 6;
	}


  message OniShop
  {
		message Goods
		{
			required int32 goods_id = 1;	// 상품 고유번호
			required int32 item_id = 2;		// 아이템 고유번호
			required bool sale = 3;				// 할인여부
			required int64 price = 4;			// 상품 가격(혼불 or 캐쉬)
		}

		message ResetSkill
		{
			required int32 skill_point = 1;	// 회수될 스킬포인트
			required int64 price = 2;				// 스킬초기화 가격(혼불)
		}

    repeated Goods goods = 1;
		optional ResetSkill reset_skill = 2;
		optional int32 discount_vip = 3;		// VIP 할인율
  }

  message BuyInOniShop
  {
    required int64 cash = 1; 			// 구매후 변동된 캐쉬
    required int64 honbul = 2; 		// 구매후 변동된 혼불
    required int64 item_no = 3; 	// 구매한 아이템의 종류
  }

  message Gifts 
	{
    message Gift 
		{
			required int64 gift_id = 1;
			required int32 gift_pid = 2;
      optional int32 count = 3;
      optional int32 item_id = 4;
      required string title = 5;
      required string message = 6;
      optional int32 cooltime = 7; // 초단위의 남은 대기 시간
    }

    repeated Gift gifts = 1;
  }


  message TakeGift 
	{
		required int32 gift_pid = 1;
    optional int32 count = 2;
    optional int32 item_id = 3; // 부적(201100000), 강화석(201200000), 코인(201300000) 이 들어있을 수 있음
    required common.GiftType gift_type = 4;
  }

	message CouponGift
	{
		repeated TakeGift gifts = 1;
	}

	message Tutorial
	{
		message Gift
		{
			required common.GiftType type = 1;
			required int32 count = 2;
		}

		required bool step1 = 1;	// 조작튜토리얼 실행
		required bool step2 = 2;	// 조작튜토리얼 완료(부활코인 받음)
		required bool step3 = 3;	// 스테이지1 시작
		required bool step4 = 4;	// 스테이지1 종료
		required bool step5 = 5;	// 무기교체
		required bool step6 = 6;	// 강화석 받음
		required bool step7 = 7;	// 강화 실행
		optional Gift gift = 8;
	}


	message DailyStamp
	{
		required int32 days = 1;					// 몇일차 인지
		repeated common.Stamp stamps = 2;	// 년월에 해당하는 일일보상 지급내용
		required bool vip_reward = 3;			// VIP 보상지급 여부
	}


  message AskExchangeHeart 
  {
    required int64 cash = 1;
    required int64 heart = 2;
  }


  message Achivement
  {
    message Entry
    {
      required common.AchivementType type = 1;  // 타입
      required int32 level = 2;    							// 레벨
      required int32 progress = 3; 							// 진행률 0 ~ 100
    }

    optional Entry today = 1; // 오늘의 업적(달성하면 없음)
    repeated Entry achivements = 2; // 전체 업적
  }

  message AchivementReward
  {
    required bool today = 1; // 일일 업적인지 여부
    required common.GiftType type = 2; // 보상 종류
    required int64 amount = 3; // 보상의 양
  }

  message NotifyAchivement
  {
    message Entry
    {
      required common.AchivementType type = 1;  // 타입
      required int32 level = 2;    							// 레벨
    }

    optional Entry achivement = 1; // 업적 달성
    optional Entry today = 2; // 오늘의 업적 달성
  }

  message InvitedFacebookFriends
  {
		message FacebookBuddy
		{
			required int64 id = 1;
		}

    repeated FacebookBuddy buddies = 1; // 초청한 페이스북톡 친구
  }

  message MaterialCooltime
  {
    required int32 cooltime = 1; 			// 초단위(0일 경우 쿨타임 없음)
		required int32 current_count = 2;	// 현재 가능횟수
		required int32 max_count = 3;			// 최대 가능횟수
    required int32 reset_count = 4;   // 몇번이나 리셋 했는지 여부
  }

  message CollectMaterial
  {
    required int32 material_id = 1; 	// 아이템 번호
    required int64 amount = 2; 				// 제공되는 아이템 수량
    required int64 honbul = 3; 				// 소지한 혼불
  }

  message ResetMaterialCooltime
  {
    required int64 cash = 1; 					// 소지한 캐쉬
		required int32 current_count = 2;	// 현재 가능횟수
		required int32 max_count = 3;			// 최대 가능횟수
    required int32 reset_count = 4;   // 몇번이나 리셋 했는지 여부
  }

	message QueryPromotion
	{
		required bool onoff = 1;			// 추천인 기능 ON/OFF
		required bool promoted = 2;		// 추천여부
	}

	message PromotionCount
	{
		required int32 count = 1;				// 추천받은 횟수
	}


  message CouponHistory
  {
    message Entry
    {
			message Gift
			{
      	required common.GiftType type = 1;
      	required int32 value = 2;
			}

      required string name = 1;	// 쿠폰명
			required string code = 2;	// 쿠폰코드
      required int32 date = 3; 	// Unixtimestamp 타입으로 넘어옴(초단위)
			repeated Gift gifts = 4;	// 보상선물 목록
    }

    repeated Entry history = 1;
  }

  message FacebookOptions
  {
    required bool no_message = 1;
    required bool no_profile = 2;
  }

	message Review
	{
		required int32 gift_pid = 1;
	}

	message Vip
	{
		message Info
		{
			required int32 level = 1;
			required int64 cash = 2;
			required int32 max_heart = 3;
			required int32 discount_cash = 4;
			required int32 discount_oni = 5;
			required string present_name = 6;
		}

		required int32 vip_level = 1;
		required int64 total_purchase = 2;
		repeated Info infos = 3;
	}

  message NotifyMessage
  {
    message Achivement
    {
      required common.AchivementType type = 1;  // 타입
      required int32 level = 2;    							// 레벨
    }

		message LevelUp
		{
			required int32 job = 1;			// 직업
			required int32 level = 2;		// 레벨
		}

		message CostumeGift
		{
			required int32 costume_id = 1;	// 의상고유번호
		}

    optional Achivement achivement = 1; 		// 업적 달성
    optional Achivement today_quest = 2; 		// 오늘의 업적 달성
		optional LevelUp		level_up = 3;				// 레벨업
		optional CostumeGift costume_gift = 4;	// 의상선물
  }


  message RefillSurvivalChallenge
  {
    required int64 cash = 1;
  }

  message SurvivalBuff
  {
    message Buff
    {
      required int32 buff_id = 1;
      required int64 price = 2;
			required string name = 3;
			required bool lock = 4;
			required common.SurvivalBuffType type = 5;
      required string property = 6;
    }

		required int32 survival_try_count = 1;
		required int32 survival_try_per_day = 2;
		required int64 reset_cooltime = 3;
		optional int32 wave = 4;
		optional int32 ranking = 5;
    repeated Buff buffs = 6;
  }

	message Revival
	{
		required int64 cash = 1;
	}



  required MessageType        type = 1;
  required int32              sequence = 2;
	required int32							checksum = 3;


  // for system
  optional Error              error = 10;
  optional Login              login = 11;
  optional Plug               plug = 12;
  optional string             leave = 13;


  // for game
  optional common.GameInfo    info = 20;
	optional common.Properties	properties = 21;
	optional common.Badges			badges = 22;
							
  optional common.Hero        make_hero = 100;
  optional common.Hero        select_hero = 101;
  repeated Hero               heroes = 102;

	// 충전소
	optional common.Eshop				eshop = 110;
	optional BuyInEshop					buy_in_eshop = 111;
	optional CashShop						cash_shop = 112;
	optional BuyInCashShop			buy_in_cash_shop = 113;
  optional OniShop            oni_shop = 114;
  optional BuyInOniShop       buy_in_oni_shop = 115;

  optional Costumes           costumes = 120;
  optional common.Hero        select_costume = 121;
  optional CostumesToMake     costumes_to_make = 122;
  optional CostumesToReinforce costumes_to_reinforce = 123;
  optional BuyCostume         buy_costume = 124;
  optional MakeCostume        make_costume = 125;
  optional ReinforceCostume   reinforce_costume = 126;


  optional common.Dungeons    dungeons = 130;
  optional common.EpicDungeons epic_dungeons = 131;
  optional common.Stages      stages = 132;
  optional UnlockStage        unlock_stage = 133;
  optional ResetStage         reset_stage = 134;
	optional QueryStage					query_stage = 135;

  optional Gifts              gifts = 140;
  optional TakeGift           take_gift = 141;
	optional Tutorial           tutorial = 142;
	optional CouponGift					keyword_coupon = 143;
	optional CouponGift					coupon = 144;
  
  optional common.Room        autojoin = 150;
  optional common.Room        make_public_room = 151;
  optional common.Room        make_private_room = 152;

  optional Heart              heart = 160;

  optional Lotterys    				lotterys = 165;
	optional TakeLottery				take_lottery = 166;

  optional common.Inventory   inventory = 170;
  optional DropItem           drop_item = 171;
  optional ExpandInventory    expand_inventory = 172;
  optional common.Hero        put_on = 173;
  optional common.Hero        take_off = 174;
  optional ReinforceItem      reinforce_item = 175;
  optional FixItem            fix_item = 176;
  optional MakeItem           make_item = 178;

  optional common.Resurrection  resurrection = 180;
 

  optional Skills             skills = 190; // 스킬 리스트
  optional ExpandSkillButton  expand_skill_button = 191; // 스킬 버튼 확장
  optional common.Hero        skill_button = 192; // 스킬 버튼 설정
  optional common.Hero        skill_auto_assign = 193; // 스킬 버튼 자동 설정
  optional ReinforceSkill     reinforce_skill = 194; // 스킬 강화
  optional ResetSkill         reset_skill = 195; // 스킬 리셋

  optional FindBuddy          find_buddy = 200;
  optional Buddies            buddies = 201;
  optional AskFriendships     ask_friendships = 202;
  optional Buddies            send_heart = 203;
  optional Buddies            receive_heart = 204;
  optional Buddies            exfriend = 205;
  optional AskFriendships     accept_friendship = 206;
  optional AskFriendships     reject_friendship = 207;
  optional bool               searchable = 209;
	optional RecommendFriendships recommend_friendships = 210;
	optional common.Ranker			friend_profile = 211;

  optional BuddiesToInvite    buddies_to_invite = 220;
  optional BeInvitedToPlayGame be_invited_to_play_game = 221;
  optional common.Room        accept_game_invitation = 222;
  optional int32              cancel_game_invitation = 223; // 취소 슬롯 번호

  optional StartGame          start_game = 230;
  optional FinishGame         finish_game = 231;
  optional SecondTreasure     second_treasure = 232;
  optional FinishMultiGame    finish_multi_game = 233;

	optional StartSurvivalGame	start_survival_game = 235;
	optional FinishSurvivalGame	finish_survival_game = 236;

	optional BattleSkip					battle_skip = 239;

  optional Ranking            ranking = 240;
  optional common.Ranker      ranker = 242;

  optional string             drop_out = 250;
  optional common.Player      level_up = 251;
	
	optional DailyStamp					dailystamp = 260;

  optional AskExchangeHeart   ask_exchange_heart = 261;

  optional Achivement         achivement = 262;
  optional AchivementReward   achivement_reward = 263;

  optional InvitedFacebookFriends   invited_facebook_friends = 265;

  optional MaterialCooltime   material_cooltime = 266;
  optional CollectMaterial    collect_material = 267;
  optional ResetMaterialCooltime reset_material_cooltime = 268;

	optional QueryPromotion			query_promotion = 270;
	optional PromotionCount			promotion_count = 271;

  optional Buddies            facebook_friends = 272;

  optional Buddies            receive_heart_all = 273;

  optional CouponHistory      coupon_history = 274;

  optional FacebookOptions       facebook_options = 275;
	optional FacebookOptions				query_facebook_options = 276;

	optional Review							review = 280;

	optional Vip								vip = 285;

  optional NotifyMessage   		notify_message = 291;

  optional RefillSurvivalChallenge refill_survival_challenge = 292;
  optional SurvivalBuff       survival_buff = 293;

	optional Revival						revival = 294;

  optional room.Response      room = 500;
}


